openapi: 3.0.0
info:
  title: Event Management API
  description: API documentation for the Event Management Application
  version: 1.0.0
servers:
  - url: https://api.example.com/v1
    description: Production server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        user_id:
          type: integer
          readOnly: true
        username:
          type: string
        email:
          type: string
          format: email
        password_hash:
          type: string
          writeOnly: true
        first_name:
          type: string
        last_name:
          type: string
        bio:
          type: string
        profile_picture_url:
          type: string
          format: uri
        social_links:
          type: object
          additionalProperties:
            type: string
        address:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true

    Event:
      type: object
      properties:
        event_id:
          type: integer
          readOnly: true
        user_id:
          type: integer
        name:
          type: string
        description:
          type: string
        date:
          type: string
          format: date
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        location:
          type: string
        pricing_info:
          type: number
          format: float
        thumbnail_url:
          type: string
          format: uri
        capacity:
          type: integer
        state:
          type: string
          enum: [PUBLISHED, DRAFT, CANCELLED]
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true

    Category:
      type: object
      properties:
        category_id:
          type: integer
          readOnly: true
        name:
          type: string

    Participant:
      type: object
      properties:
        participant_id:
          type: integer
          readOnly: true
        user_id:
          type: integer
        event_id:
          type: integer
        rsvp_date:
          type: string
          format: date-time
          readOnly: true

    Notification:
      type: object
      properties:
        notification_id:
          type: integer
          readOnly: true
        user_id:
          type: integer
        event_id:
          type: integer
        notification_type:
          type: string
        sent_at:
          type: string
          format: date-time
          readOnly: true

security:
  - BearerAuth: []

paths:
  /users:
    post:
      summary: Register a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid input

  /auth/login:
    post:
      summary: User login
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "401":
          description: Unauthorized

  /users/{user_id}:
    get:
      summary: Get user profile
      tags:
        - Users
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found

    put:
      summary: Update user profile
      tags:
        - Users
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: User profile updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid input
        "404":
          description: User not found

    delete:
      summary: Delete user account
      tags:
        - Users
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: User account deleted successfully
        "404":
          description: User not found

  /events:
    post:
      summary: Create a new event
      tags:
        - Events
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Event"
      responses:
        "201":
          description: Event created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        "400":
          description: Invalid input

    get:
      summary: Get a list of events
      tags:
        - Events
      responses:
        "200":
          description: List of events retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"

  /events/{event_id}:
    get:
      summary: Get event details
      tags:
        - Events
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Event details retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        "404":
          description: Event not found

    put:
      summary: Update event details
      tags:
        - Events
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Event"
      responses:
        "200":
          description: Event updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        "400":
          description: Invalid input
        "404":
          description: Event not found

    delete:
      summary: Delete event
      tags:
        - Events
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Event deleted successfully
        "404":
          description: Event not found

  /events/{event_id}/publish:
    put:
      summary: Publish event
      tags:
        - Events
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Event published successfully
        "404":
          description: Event not found

  /events/{event_id}/cancel:
    put:
      summary: Cancel event
      tags:
        - Events
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Event cancelled successfully
        "404":
          description: Event not found

  /participants:
    post:
      summary: RSVP to an event
      tags:
        - Participants
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                event_id:
                  type: integer
      responses:
        "201":
          description: RSVP successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Participant"
        "400":
          description: Invalid input

    delete:
      summary: Cancel RSVP
      tags:
        - Participants
      parameters:
        - name: participant_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: RSVP cancelled successfully
        "404":
          description: Participant not found

  /notifications:
    get:
      summary: Get notifications
      tags:
        - Notifications
      responses:
        "200":
          description: Notifications retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Notification"

  /notifications/{notification_id}:
    delete:
      summary: Delete notification
      tags:
        - Notifications
      parameters:
        - name: notification_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Notification deleted successfully
        "404":
          description: Notification not found
